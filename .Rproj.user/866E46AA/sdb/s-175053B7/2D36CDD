{
    "collab_server" : "",
    "contents" : "require(dplyr)\n#create vars as defined in v.com, ordered by tier_v list\nstx.data <- NULL\noos.data <- NULL\n\nfor (n in stx_n) {\n  nam <- symbols[n]\n  if (verbose) print(paste(\"Getting data for:\",nam))\n\n  #calculate returns (list of returns in calc_rets in calc_func.R)\n  adjv <- calc_adj(get(nam),nam)\n  lagv <- calc_lag(adjv,rename=TRUE)\n  pvars <- cbind(adjv,lagv)\n  ret <- calc_rets(pvars)\n  \n  if (!exists(\"first_loop\")) {\n    #calculate correlation with cmn returns for CC\n    corr.data <- cbind(ret[,\"CC\"],cmnret[,\"CC\"])\n    corr.val <- cor(corr.data,use=\"complete.obs\")[1,2]\n    if (verbose) print(paste(\"corr=\",corr.val))\n    if (nrow(get(nam)) < 320 | corr.val < corr.threshold) {\n      if (verbose) print(\"reomve from stx list\")\n      stx_n <- stx_n[-which(stx_n == n)] #remove from stx list\n      next #don't include stx that don't correlate with common\n    }\n  }\n  \n  res <- ret - cmnret  #create resid returns\n\n  if (verbose) print(\"calc logadv.z\")\n  logadv.z <- runMean(adjv[,\"D\"],n=20,cumulative=FALSE)\n  logadv.z <- log(logadv.z)\n  logadv.z <- logadv.z - 18.5 #create logadv.z, lb=20, assumed 18.5 as mean\n  names(logadv.z) <- \"logadv.z\"\n  \n  if (verbose) print (\"mk_vars_fun\")\n  stx1.data <- mk_vars_fun(v.com, res, ret, cmnret, logadv.z, adjv, cmnpvars)\n  \n  #attach date and TICKER as key fields on variable data\n  if (verbose) print(\"postprocess data\")\n  #if (verbose) print(colnames(stx1.data))\n  stx1.data.df <- as.data.frame(stx1.data)\n  stx2.data <- as.data.frame(index(stx1.data))\n  stx2.data[,2] <- rep(nam, nrow(stx1.data))\n  colnames(stx2.data) <- c(\"date\",\"TICKER\")\n  stx1.data.df <- bind_cols(stx2.data,stx1.data.df)\n  #if (verbose) print(colnames(stx1.data.df))\n  \n  \n  if (run_type == \"add_vars\" | is.null(df)) {\n    #combine data from previously calculated variables\n    if (!is.null(raw.data.saved)) {\n      stx2.data <- filter(raw.data.saved,TICKER == nam)\n      #rownames(stx2.data) <- substr(rownames(stx2.data),1,10) #only include date part\n      #print(paste(nrow(stx1.data),ncol(stx1.data),nrow(stx2.data),ncol(stx2.data)))\n      #if (nrow(stx1.data) != nrow(stx2.data)) {\n        #keep.dat <- rownames(stx1.data) %in% rownames(stx2.data)\n      #  stx1.data <- filter(stx1.data,rownames(stx1.data) %in% rownames(stx2.data))\n        #print(paste(nrow(stx1.data),ncol(stx1.data),nrow(stx2.data),ncol(stx2.data)))\n      #}\n      stx1.data.df <- left_join(stx2.data,stx1.data.df,by=c(\"TICKER\",\"date\"))\n      #print(paste(nrow(stx1.data),ncol(stx1.data)))\n    }\n  }\n\n  stx1.data.df <- slice(stx1.data.df, -1:-90)\n  stx1.data.df[is.na(stx1.data.df)] <- 0\n  dp <- nrow(stx1.data.df)\n  if (dp > 252) {\n    oos1.data.df <- slice(stx1.data.df,(dp-252):dp)\n    stx1.data.df <- slice(stx1.data.df,-(dp-252):-dp)\n  } else {\n    oos1.data.df <- stx1.data.df\n    stx1.data.df <- NULL\n  }\n\n  stx.data <- bind_rows(stx.data,stx1.data.df)\n  oos.data <- bind_rows(oos.data,oos1.data.df)\n  \n}\nfirst_loop <- FALSE\n#if (exists(\"stx2.data\")) print(paste(\"Old vars:\",ncol(stx2.data),\"Total vars:\",ncol(stx.data)))\n",
    "created" : 1480383777285.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1945893578",
    "id" : "2D36CDD",
    "lastKnownWriteTime" : 1478321881,
    "last_content_update" : 1478321881,
    "path" : "~/XLF/XLF.V02/mk_vars_v2.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}