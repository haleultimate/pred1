{
    "collab_server" : "",
    "contents" : "symbols <- c(\n  \"XLF\", # Financial sector ETF\n  \"BRK-B\",\n  \"JPM\",\n  \"WFC\",\n  \"BAC\",\n  \"C\",\n  \"USB\",\n  \"GS\",\n  \"AIG\",\n  \"CB\",\n  \"AXP\",\n  \"MET\",\n  \"MS\",\n  \"BLK\",\n  \"PNC\",\n  \"BK\",\n  \"SCHW\",\n  \"CME\",\n  \"COF\",\n  \"MMC\",\n  \"PRU\",\n  \"TRV\",\n  \"SPGI\",\n  \"ICE\",\n  \"BBT\",\n  \"AON\",\n  \"AFL\",\n  \"STT\",\n  \"ALL\",\n  \"DFS\",\n  \"STI\",\n  \"PGR\",\n  \"MTB\",\n  \"HIG\",\n  \"TROW\",\n  \"AMP\",\n  \"FITB\",\n  \"NTRS\",\n  \"PFG\",\n  \"KEY\",\n  \"IVZ\",\n  \"BEN\",\n  \"RF\",\n  \"CINF\",\n  \"L\",\n  \"HBAN\",\n  \"LNC\",\n  \"XL\",\n  \"AJG\",\n  \"UNM\",\n  \"CMA\",\n  \"NDAQ\",\n  \"AMG\",\n  \"ETFC\",\n  \"TMK\",\n  \"ZION\",\n  \"LUK\",\n  \"AIZ\",\n  \"LM\"\n)\nstx_n <- c(5:6) #c(2:length(symbols)) #c(2:length(symbols))  c(2:length(symbols))  #c(5:10) #\nstx.symbols <- symbols[stx_n]      #list of stx to trade\nstx <- length(stx_n)\n#load mktdata\nstx_list <- append(1,stx_n)\nstx_list <- symbols[stx_list]      #cmn index + stx to trade\n\nrm.list <- ls(all=TRUE)\nkeep.list <- c(stx_list,\"stx\",\"stx_list\",\"stx.symbols\",\"stx_n\",\"stx_list.old\",\"data.env\")\nisNameinKeep <- rm.list %in% keep.list\nrm.list <- c(rm.list[!isNameinKeep],\"keep.list\",\"isNameinKeep\",\"rm.list\")\nrm(list = rm.list)  #clear environment except for loaded stock data \n\n#setup output to go to logfile\noriginal_wd <- getwd()\n#logdir <- paste(original_wd,\"/logs\",sep=\"\")\n#setwd(logdir)\n#logfile <- file(\"logfile.txt\",\"w\")\n#sink(file=logfile,type=\"output\")\nprint(paste(\"Start time:\",Sys.time()))\n#setwd(original_wd)\n\nrequire(lpSolveAPI)\nrequire(quantmod)\nrequire(dplyr)\nif (!exists(\"data.env\")) data.env <- new.env()\nvar.env <- new.env()\n\n#Init data_load vars\nSys.setenv(TZ = \"UTC\")\nadjustment <- TRUE\nstart_date <- \"2004-01-01\" #\"2004-01-01\"\nend_date <- \"2012-12-31\"\nif (!exists(\"stx_list.old\")) {         #only load if stx_list has changed\n  getSymbols(Symbols = stx_list,\n             env=data.env,\n             src = \"yahoo\", \n             index.class = \"POSIXct\",\n             from = start_date, \n             to = end_date, \n             adjust = adjustment)\n  stx_list.old <- stx_list\n} else if (!identical(stx_list,stx_list.old)) {\n  isNameinStxold <- stx_list %in% stx_list.old\n  stx_list.new <- stx_list[!isNameinStxold]\n  getSymbols(Symbols = stx_list.new, \n             env=data.env,\n             src = \"yahoo\", \n             index.class = \"POSIXct\",\n             from = start_date, \n             to = end_date, \n             adjust = adjustment)\n  rm(stx_list.new,isNameinStxold)\n  stx_list.old <- stx_list\n}\n\nverbose <- TRUE\n#run_type <- \"add_vars\"\n#nloops <- 10\n#insample.r2.threshold <- 0.02\npredict.ret <- \"CCret\"  \n\n#corr.threshold <- 0.7\nv.com <- NULL\n#load(file=\"cores50.Rdata\")\n#if (verbose & exists(\"store.data\")) print(store.data[length(store.data)])\n\n\n\n\n",
    "created" : 1480377292060.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3297026184",
    "id" : "F8770BC4",
    "lastKnownWriteTime" : 1480529816,
    "last_content_update" : 1480529816487,
    "path" : "~/XLF/p1/init_session.R",
    "project_path" : "init_session.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}